name: Update FIXED_CAMERAS KV

on:
  schedule:
    - cron: "0 */6 * * *" # every 6 hours
  workflow_dispatch:

jobs:
  update_kv:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install Wrangler
        run: npm install -g wrangler

      # ---------- DEBUG: verify token can see account & memberships ----------
      - name: Debug â€” show Cloudflare accounts & memberships
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          echo "== Accounts =="
          curl -s -X GET "https://api.cloudflare.com/client/v4/accounts" \
            -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN" \
            -H "Content-Type: application/json" -o /tmp/cf_accounts.json || true

          # pretty-print if jq available, fallback to python json.tool, else raw
          if command -v jq >/dev/null 2>&1; then
            jq . /tmp/cf_accounts.json || true
          else
            python -m json.tool /tmp/cf_accounts.json 2>/dev/null || cat /tmp/cf_accounts.json
          fi

          echo "== Memberships =="
          curl -s -X GET "https://api.cloudflare.com/client/v4/memberships" \
            -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN" \
            -H "Content-Type: application/json" -o /tmp/cf_memberships.json || true

          if command -v jq >/dev/null 2>&1; then
            jq . /tmp/cf_memberships.json || true
          else
            python -m json.tool /tmp/cf_memberships.json 2>/dev/null || cat /tmp/cf_memberships.json
          fi
        shell: bash

      - name: Upload osm_cameras.json to KV
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          FIXED_CAMERAS_NAMESPACE: ${{ secrets.KV_NAMESPACE_ID }}
        run: |
          wrangler kv key put \
            fixed-cameras \
            --namespace-id "$FIXED_CAMERAS_NAMESPACE" \
            --path osm_cameras.json \
            --remote

      # ----- DEBUG: print wrangler logs to console so you can read them in the step output -----
      - name: Dump Wrangler logs to console
        if: always()
        run: |
          echo "=== Listing wrangler log directory ==="
          ls -la /home/runner/.config/.wrangler/logs || true
          echo "=== Showing last 400 lines from each wrangler log (if any) ==="
          for f in /home/runner/.config/.wrangler/logs/*.log; do
            [ -f "$f" ] || continue
            echo "---- START $f ----"
            tail -n 400 "$f" || true
            echo "---- END $f ----"
          done
        shell: bash

      # ----- DEBUG: upload wrangler logs as an artifact to download from the Run page -----
      - name: Upload Wrangler logs (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: wrangler-logs
          path: /home/runner/.config/.wrangler/logs/*.log
